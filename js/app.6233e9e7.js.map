{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?363d","webpack:///./src/App.vue","webpack:///./src/components/Mindmap/Mindmap.vue","webpack:///./src/tools/flextree/algorithm.ts","webpack:///./src/tools/flextree/helper.ts","webpack:///./src/tools/ImData.ts","webpack:///./src/tools/index.ts","webpack:///./src/components/Mindmap/Mindmap.vue?45e6","webpack:///./src/components/Mindmap/Mindmap.vue?8e34","webpack:///./src/components/Mindmap/index.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?64a4","webpack:///./src/main.ts","webpack:///./src/components/Mindmap/Mindmap.module.scss?cb56"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","href","target","learn","branch","rangeList","x-gap","y-gap","zoom","checkboxList","fit-btn","center-btn","download-btn","drag","edit","add-node-btn","item","type","disabled","for","min","max","ref","style","contenteditable","centerView","fitView","download","width","height","y","children","this","w","h","cs","x","prelim","mod","change","tl","tr","el","er","msel","mser","setExtremes","tree","bottom","lowY","index","next","updateIYL","minY","ih","IYL","distributeExtra","si","distance","nr","moveSubtree","nextLeftContour","nextRightContour","setLeftThread","cl","modsumcl","li","diff","setRightThread","sr","modsumsr","ri","seperate","mssr","mscl","sy","cy","positionRoot","firstWalk","addChildSpacing","modsumdelta","secondWalk","modsum","layout","gap","bottomPadding","addBoundingBox","removeBoundingBox","boundingBox","bb","treeData","convert","assignLayout","Tree","assignCoordinates","getSize","box","left","right","top","Math","child","colorScale","colorNumber","gKey","initTreeData","size","rawData","forEach","init","id","color","px","py","depth","floor","parent","dx","dy","swapWidthAndHeight","swapXAndY","renewDelta","renewId","renewColor","traverse","process","getLayout","xGap","yGap","BoundingBox","setBoundingBox","renew","find","array","split","map","rename","reparent","parentId","delId","np","del","delIndex","pop","delParent","move","referenceId","after","idArr","refArr","refIndex","parseInt","rawChildren","add","getAddPath","stroke","side","temp0","temp1","temp2","temp3","getMultiline","str","multiline","props","modelValue","Array","required","Number","default","scaleExtent","centerBtn","Boolean","fitBtn","downloadBtn","undoBtn","addNodeBtn","keyboard","contextMenu","setup","mmdata","svgEle","gEle","asstSvgEle","foreignEle","foreignDivEle","svg","g","asstSvg","foreign","link","linkHorizontal","source","on","onZoomMove","container","getDragContainer","onDragMove","onDragEnd","observer","ResizeObserver","arr","temp","pl","getComputedStyle","paddingLeft","b","parentNode","borderTopWidth","attr","contentRect","editFlag","showAddNodeBtn","rootTextRectRadius","rootTextRectPadding","textRectPadding","addBtnRect","padding","addBtnSide","select","observe","JSON","parse","stringify","draw","raise","addEventListener","onEditBlur","e","stopPropagation","oldSele","document","getElementsByClassName","selected","classList","remove","switchZoom","val","switchSelect","switchDrag","switchEdit","selectAll","getGClass","root","getGTransform","getDataId","getPath","dpw","dph","trp","getTspanData","getAddBtnTransform","attrG","tran","join","transition","attrPath","attrTspan","tspan","text","attrTextRect","rect","radius","attrAddBtn","attrAddBtnRect","attrTrigger","trigger","appendAddBtn","gAddBtn","append","onClickAddBtn","appendTspan","enter","updateTspan","update","appendNode","isRoot","enterG","gContent","content","gTrigger","gText","gTextRect","bindEvent","each","filter","a","updateNode","makeTransition","easePolyOut","exit","node","sele","Error","tBox","getBBox","selectGNode","ele","querySelector","moveNode","dura","easingFn","duration","ease","onSelect","onEdit","onMouseEnter","onMouseLeave","transform","toString","gNode","mousePos","pointer","other","startsWith","x0","x1","y0","y1","old","from","outline","pid","getAttribute","downD","upD","brothers","edited","div","textContent","focus","getSelection","selectAllChildren","display","oldname","opacity","zoomable","editable","draggable","selectable","translateTo","gBB","svgBCR","getBoundingClientRect","multiple","svgCenter","gCenter","center","zoomIdentity","translate","scale","svgdiv","then","canvas","dataUrl","toDataURL","open","write","title","close","render","components","Mindmap","vertical","App","mount"],"mappings":"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","file":"js/app.6233e9e7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue3-mindmap/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","<template>\n  <div class=\"container\">\n    <div class=\"left-top\">\n      <a href=\"https://github.com/hellowuxin/vue3-mindmap\" target=\"_blank\">GitHub</a>\n    </div>\n    <div class=\"right-top\"><span>Props</span></div>\n    <mindmap\n      class=\"left-bottom\"\n      v-model=\"learn\"\n      :branch=\"rangeList['branch'].value\"\n      :x-gap=\"rangeList['x-gap'].value\"\n      :y-gap=\"rangeList['y-gap'].value\"\n      :zoom=\"checkboxList['zoom'].value\"\n      :fit-btn=\"checkboxList['fit-btn'].value\"\n      :center-btn=\"checkboxList['center-btn'].value\"\n      :download-btn=\"checkboxList['download-btn'].value\"\n      :drag=\"checkboxList['drag'].value\"\n      :edit=\"checkboxList['edit'].value\"\n      :add-node-btn=\"checkboxList['add-node-btn'].value\"\n    ></mindmap>\n    <div class=\"right-bottom\">\n      <div v-for=\"(item, key) in checkboxList\" :key=\"key\">\n        <input type=\"checkbox\" :name=\"key\" v-model=\"item.value\" :disabled=\"item.disabled\">\n        <label :for=\"key\">{{ key }}</label>\n      </div>\n      <div v-for=\"(item, key) in rangeList\" :key=\"key\">\n        <input type=\"range\" :name=\"key\" v-model.number=\"item.value\" :min=\"item.min\" :max=\"item.max\">\n        <label :for=\"key\">{{ key }}</label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport learn from '../public/learn.json'\nimport { defineComponent, reactive } from 'vue'\nimport Mindmap from './components/Mindmap'\ntype checkbox = { [key: string]: { value: boolean, disabled?: boolean } }\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Mindmap\n  },\n  setup () {\n    const checkboxList = reactive<checkbox>({\n      'center-btn': { value: true },\n      'fit-btn': { value: true },\n      'undo-btn': { value: false, disabled: true },\n      'download-btn': { value: true },\n      'add-node-btn': { value: true },\n      keyboard: { value: false, disabled: true },\n      zoom: { value: true },\n      drag: { value: true },\n      edit: { value: true },\n      contextMenu: { value: false },\n      'sharp-corner': { value: false, disabled: true },\n      vertical: { value: false, disabled: true }\n    })\n    const rangeList = reactive({\n      branch: { value: 4, min: 0, max: 10 },\n      'x-gap': { value: 50, min: 0, max: 100 },\n      'y-gap': { value: 18, min: 0, max: 100 }\n    })\n    return {\n      learn,\n      checkboxList,\n      rangeList\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.container {\n  width: 100%;\n  height: calc(100vh - 16px);\n  border-radius: 4px;\n  border: thin solid rgba(0,0,0,.12);\n  overflow: hidden;\n  background-color: rgba(0,0,0,.12);\n  display: grid;\n  grid-template-columns: 75% 1px 25%;\n  grid-template-rows: 48px 1px auto;\n}\n\n.right-top {\n  grid-column: 3 / 4;\n}\n\n.left-bottom {\n  grid-row: 3 / 4;\n}\n\n.right-bottom {\n  grid-column: 3 / 4;\n  grid-row: 3 / 4;\n  background-color: white;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  overflow: scroll;\n\n  div {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n}\n\n.left-top,\n.right-top {\n  background-color: #eee;\n  padding: 0 12px;\n  display: flex;\n  align-items: center;\n}\n\ninput[type='checkbox'] {\n  cursor: pointer;\n}\n\ninput:disabled {\n  cursor: not-allowed;\n}\n</style>\n","<template>\n  <div :class=\"style['container']\">\n    <div :class=\"style['svg']\">\n      <svg :class=\"style['svg']\" ref=\"svgEle\">\n        <g ref=\"gEle\">\n          <foreignObject ref=\"foreignEle\" style=\"display: none\">\n            <div ref=\"foreignDivEle\" contenteditable></div>\n          </foreignObject>\n        </g>\n      </svg>\n    </div>\n    <svg ref=\"asstSvgEle\"></svg>\n    <div :class=\"[style['button-list'], style['right-bottom']]\">\n      <button v-if=\"centerBtn\" @click=\"centerView()\"><i :class=\"style['gps']\"></i></button>\n      <button v-if=\"fitBtn\" @click=\"fitView()\"><i :class=\"style['fit']\"></i></button>\n      <button v-if=\"downloadBtn\" @click=\"download()\"><i :class=\"style['download']\"></i></button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, PropType, Ref, ref, watch } from 'vue'\nimport { Data, Mdata } from '@/interface'\nimport style from './Mindmap.module.scss'\nimport { d3, ImData, getAddPath, getMultiline } from '@/tools'\nimport html2canvas from 'html2canvas'\n\ntype TspanData = { name: string, height: number }\ntype SelectionG = d3.Selection<SVGGElement, Mdata, SVGGElement, Mdata | null>\ntype SelectionRect = d3.Selection<SVGRectElement, Mdata, SVGGElement, Mdata | null>\ntype Transition = d3.Transition<d3.BaseType, Mdata, SVGGElement, unknown>\ntype TwoNumber = [number, number]\n\nexport default defineComponent({\n  name: 'Mindmap',\n  props: {\n    modelValue: {\n      type: Array as PropType<Data[]>,\n      required: true\n    },\n    width: Number,\n    height: Number,\n    xGap: {\n      type: Number,\n      default: 50\n    },\n    yGap: {\n      type: Number,\n      default: 18\n    },\n    branch: {\n      type: Number,\n      default: 4\n    },\n    scaleExtent: {\n      default: (): TwoNumber => [0.1, 8]\n    },\n    centerBtn: Boolean,\n    fitBtn: Boolean,\n    downloadBtn: Boolean,\n    undoBtn: Boolean,\n    addNodeBtn: Boolean,\n    edit: Boolean,\n    drag: Boolean,\n    keyboard: Boolean,\n    contextMenu: Boolean,\n    zoom: Boolean\n  },\n  setup (props) {\n    const svgEle: Ref<SVGSVGElement | undefined> = ref()\n    const gEle: Ref<SVGGElement | undefined> = ref()\n    const asstSvgEle: Ref<SVGSVGElement | undefined> = ref()\n    const foreignEle: Ref<SVGForeignObjectElement | undefined> = ref()\n    const foreignDivEle: Ref<HTMLDivElement | undefined> = ref()\n    const svg: Ref<d3.Selection<SVGSVGElement, null, null, undefined> | undefined> = ref()\n    const g: Ref<d3.Selection<SVGGElement, null, null, undefined> | undefined> = ref()\n    const asstSvg: Ref<d3.Selection<SVGSVGElement, unknown, null, undefined> | undefined> = ref()\n    const foreign: Ref<d3.Selection<SVGForeignObjectElement, null, null, undefined> | undefined> = ref()\n    const link = d3.linkHorizontal().source((d) => d.source).target((d) => d.target)\n    const zoom = d3.zoom<SVGSVGElement, null>().on('zoom', onZoomMove).scaleExtent(props.scaleExtent)\n    const drag = d3.drag<SVGGElement, Mdata>().container(getDragContainer).on('drag', onDragMove).on('end', onDragEnd)\n    const observer = new ResizeObserver((arr) => {\n      if (!foreign.value) { return }\n      const temp = arr[0]\n      const target = temp.target\n      const pl = parseInt(getComputedStyle(target).paddingLeft || '0', 10)\n      const b = parseInt(getComputedStyle(target.parentNode as Element).borderTopWidth || '0', 10)\n      const gap = (pl + b) * 2\n      foreign.value.attr('width', temp.contentRect.width + gap).attr('height', temp.contentRect.height + gap)\n    })\n    let mmdata: ImData\n    let editFlag = false\n    const showAddNodeBtn = ref(true)\n    const rootTextRectRadius = 6\n    const rootTextRectPadding = 10\n    const textRectPadding = computed(() => Math.min(props.yGap / 2 - 1, rootTextRectPadding))\n    const addBtnRect = { side: 12, padding: 2 }\n    const addBtnSide = addBtnRect.side + addBtnRect.padding * 2\n\n    onMounted(() => {\n      if (!svgEle.value || !gEle.value || !asstSvgEle.value || !foreignEle.value || !foreignDivEle.value) { return }\n      svg.value = d3.select(svgEle.value)\n      g.value = d3.select(gEle.value)\n      asstSvg.value = d3.select(asstSvgEle.value).attr('width', 0).attr('height', 0)\n      foreign.value = d3.select(foreignEle.value)\n      observer.observe(foreignDivEle.value)\n\n      mmdata = new ImData(\n        JSON.parse(JSON.stringify(props.modelValue[0])),\n        props.xGap,\n        props.yGap,\n        getSize\n      )\n\n      draw()\n      foreign.value.raise()\n      foreignDivEle.value.addEventListener('blur', onEditBlur)\n      foreignDivEle.value.addEventListener('mousedown', (e: MouseEvent) => e.stopPropagation())\n      centerView()\n      fitView()\n      // mousedown与drag/zoom绑定的先后顺序会有影响\n      svg.value.on('mousedown', () => {\n        const oldSele = document.getElementsByClassName(style.selected)[0]\n        oldSele?.classList.remove(style.selected)\n      })\n      switchZoom(props.zoom)\n    })\n    // watch\n    watch(() => [props.branch, props.addNodeBtn], () => draw())\n    watch(() => [props.xGap, props.yGap], (val) => {\n      mmdata.setBoundingBox(val[0], val[1])\n      draw()\n    })\n    watch(() => [props.drag, props.edit], (val) => {\n      switchSelect(val[0] || val[1])\n      switchDrag(val[0])\n      switchEdit(val[1])\n    })\n    watch(() => props.zoom, (val) => switchZoom(val))\n    watch(showAddNodeBtn, (val) => {\n      g.value?.selectAll(`g.${style['add-btn']}`).style('display', val ? '' : 'none')\n    })\n    // 每个属性的计算方法\n    const getGClass = (d?: Mdata) => {\n      const arr = ['node']\n      if (d) {\n        arr.push(`depth-${d.depth}`)\n        if (d.depth === 0) { arr.push(style.root) }\n      }\n      return arr\n    }\n    const getGTransform = (d: Mdata) => { return `translate(${d.dx + d.px},${d.dy + d.py})` }\n    const getDataId = (d: Mdata): string => { return d.id }\n    const getPath = (d: Mdata) => {\n      let dpw = 0\n      let dph = 0\n      if (d.parent) {\n        dpw = d.parent.width\n        dph = d.parent.height\n        if (d.parent.depth === 0) {\n          dpw /= 2\n          dph /= 2\n        }\n      }\n      const temp = props.branch / 2\n      const source: TwoNumber = [-d.dx + dpw - d.px, -d.dy + dph + temp - d.py]\n      const target: TwoNumber = [0, d.height + temp]\n      const trp = Math.max(textRectPadding.value - 3, 0)\n      return `${link({ source, target })}L${d.width + trp},${target[1]}`\n    }\n    const getTspanData = (d: Mdata): TspanData[] => {\n      const multiline = getMultiline(d.name)\n      const height = d.height / multiline.length\n      return multiline.map((name) => ({ name, height }))\n    }\n    const getAddBtnTransform = (d: Mdata, trp: number) => {\n      const gap = 8\n      const y = d.depth === 0 ? d.height / 2 : d.height + props.branch / 2\n      return `translate(${d.width + trp + addBtnSide / 2 + gap},${y})`\n    }\n    // 每个图形的绘制方法\n    const attrG = (g: SelectionG, tran?: Transition) => {\n      const temp1 = g.attr('class', (d) => getGClass(d).join(' ')).attr('data-id', getDataId)\n      const temp2 = tran ? temp1.transition(tran) : temp1\n      temp2.attr('transform', getGTransform)\n    }\n    const attrPath = (p: d3.Selection<SVGPathElement, Mdata, SVGGElement, Mdata | null>, tran?: Transition) => {\n      const temp1 = p.attr('stroke', (d) => d.color).attr('stroke-width', props.branch)\n      const temp2 = tran ? temp1.transition(tran) : temp1\n      temp2.attr('d', getPath)\n    }\n    const attrTspan = (tspan: d3.Selection<SVGTSpanElement, TspanData, SVGTextElement, Mdata>) => {\n      tspan.attr('alignment-baseline', 'text-before-edge')\n        .text((d) => d.name || ' ')\n        .attr('x', 0)\n        .attr('dy', (d, i) => i ? d.height : 0)\n    }\n    const attrTextRect = (rect: SelectionRect, padding = textRectPadding.value, radius = 4) => {\n      rect.attr('x', -padding).attr('y', -padding).attr('rx', radius).attr('ry', radius)\n        .attr('width', (d) => d.width + padding * 2).attr('height', (d) => d.height + padding * 2)\n    }\n    const attrAddBtn = (g: SelectionG, trp = textRectPadding.value) => {\n      g.attr('class', style['add-btn']).attr('transform', (d) => getAddBtnTransform(d, trp))\n    }\n    const attrAddBtnRect = (rect: SelectionRect) => {\n      const side = addBtnRect.side\n      const padding = addBtnRect.padding\n      const radius = 4\n      const temp0 = -padding - side / 2\n      const temp1 = side + padding * 2\n      rect.attr('x', temp0).attr('y', temp0).attr('rx', radius).attr('ry', radius).attr('width', temp1).attr('height', temp1)\n    }\n    const attrTrigger = (rect: SelectionRect, padding = textRectPadding.value) => {\n      rect.attr('class', style.trigger)\n        .attr('x', -padding)\n        .attr('y', -padding)\n        .attr('width', (d) => d.width + padding * 2 + 8 + addBtnSide)\n        .attr('height', (d) => d.height + padding * 2)\n    }\n    // 绘制节点的方法\n    const appendAddBtn = (g: SelectionG) => {\n      const gAddBtn = g.append('g')\n      gAddBtn.on('click', onClickAddBtn)\n      attrAddBtnRect(gAddBtn.append('rect'))\n      gAddBtn.append('path').attr('d', getAddPath(2, addBtnRect.side))\n      return gAddBtn\n    }\n    const appendTspan = (enter: d3.Selection<d3.EnterElement, TspanData, SVGTextElement, Mdata>) => {\n      const tspan = enter.append('tspan')\n      attrTspan(tspan)\n      return tspan\n    }\n    const updateTspan = (update: d3.Selection<SVGTSpanElement, TspanData, SVGTextElement, Mdata>) => {\n      attrTspan(update)\n      return update\n    }\n    const appendNode = (enter: d3.Selection<d3.EnterElement, Mdata, SVGGElement, Mdata | null>) => {\n      const isRoot = !enter.data()[0]?.depth\n      const enterG = enter.append('g')\n      attrG(enterG)\n      // 绘制线\n      attrPath(enterG.append('path'))\n      // 节点容器\n      const gContent = enterG.append('g').attr('class', style.content)\n      const gTrigger = gContent.append('rect')\n      // 绘制文本\n      const gText = gContent.append('g').attr('class', style.text)\n      const gTextRect = gText.append('rect')\n      const tspan = gText.append('text').selectAll('tspan').data(getTspanData).enter().append('tspan')\n      attrTspan(tspan)\n      // 绘制添加按钮\n      let gAddBtn\n      if (props.addNodeBtn) { gAddBtn = appendAddBtn(gContent) }\n\n      if (isRoot) {\n        attrTrigger(gTrigger, rootTextRectPadding)\n        attrTextRect(gTextRect, rootTextRectPadding, rootTextRectRadius)\n        if (gAddBtn) { attrAddBtn(gAddBtn, rootTextRectPadding) }\n      } else {\n        attrTrigger(gTrigger)\n        attrTextRect(gTextRect)\n        if (gAddBtn) { attrAddBtn(gAddBtn) }\n      }\n\n      bindEvent(enterG, isRoot)\n\n      enterG.each((d, i) => {\n        if (!d.children) { return }\n        draw(d.children, enterG.filter((a, b) => i === b))\n      })\n      gContent.raise()\n      return enterG\n    }\n    const updateNode = (update: SelectionG) => {\n      const isRoot = !update.data()[0]?.depth\n      const tran = makeTransition(500, d3.easePolyOut)\n      attrG(update, tran)\n      attrPath(update.select<SVGPathElement>(':scope > path'), tran)\n      const gContent = update.select<SVGGElement>(`:scope > g.${style.content}`)\n      const gTrigger = gContent.select<SVGRectElement>(':scope > rect')\n      const gText = gContent.select<SVGGElement>(`g.${style.text}`)\n      const gTextRect = gText.select<SVGRectElement>('rect')\n      gText.select<SVGTextElement>('text').selectAll<SVGTSpanElement, TspanData>('tspan')\n        .data(getTspanData)\n        .join(appendTspan, updateTspan, exit => exit.remove())\n      let gAddBtn = gContent.select<SVGGElement>(`g.${style['add-btn']}`)\n      if (props.addNodeBtn) {\n        if (!gAddBtn.node()) { gAddBtn = appendAddBtn(gContent) }\n      } else {\n        gAddBtn.remove()\n      }\n\n      if (isRoot) {\n        attrTrigger(gTrigger, rootTextRectPadding)\n        attrTextRect(gTextRect, rootTextRectPadding, rootTextRectRadius)\n        attrAddBtn(gAddBtn, rootTextRectPadding)\n      } else {\n        attrTrigger(gTrigger)\n        attrTextRect(gTextRect)\n        attrAddBtn(gAddBtn)\n      }\n\n      update.each((d, i) => {\n        if (!d.children) { return }\n        draw(d.children, update.filter((a, b) => i === b))\n      })\n      gContent.raise()\n      return update\n    }\n    // 其他\n    const draw = (d = [mmdata.data], sele = g.value as d3.Selection<SVGGElement, any, any, any>) => {\n      const temp = sele.selectAll<SVGGElement, Mdata>(`g.${getGClass(d[0]).join('.')}`)\n      temp.data(d, (d) => d.gKey).join(appendNode, updateNode)\n    }\n    const getSize = (text: string): { width: number, height: number } => {\n      if (!asstSvg.value) { throw new Error('asstSvg undefined') }\n      const multiline = getMultiline(text)\n      const t = asstSvg.value.append('text')\n      t.selectAll('tspan').data(multiline).enter().append('tspan').text((d) => d).attr('x', 0)\n      const tBox = (t.node() as SVGTextElement).getBBox()\n      t.remove()\n      return {\n        width: Math.max(tBox.width, 22),\n        height: Math.max(tBox.height, 22) * multiline.length\n      }\n    }\n    const selectGNode = (d: Mdata) => {\n      const ele = document.querySelector(`g[data-id='${getDataId(d)}']`)\n      const oldSele = document.getElementsByClassName(style.selected)[0]\n      if (ele) {\n        if (oldSele) {\n          if (oldSele !== ele) {\n            oldSele.classList.remove(style.selected)\n            ele.classList.add(style.selected)\n          } else {\n            editFlag = true\n          }\n        } else {\n          ele.classList.add(style.selected)\n        }\n      } else {\n        throw new Error(`g[data-id='${getDataId(d)}'] is null`)\n      }\n    }\n    const moveNode = (node: SVGGElement, d: Mdata, p: TwoNumber, dura = 0) => {\n      const tran = makeTransition(dura, d3.easePolyOut)\n      d.px = p[0]\n      d.py = p[1]\n      d3.select<SVGGElement, Mdata>(node).transition(tran).attr('transform', getGTransform)\n      d3.select<SVGPathElement, Mdata>(`g[data-id='${getDataId(d)}'] > path`).transition(tran).attr('d', getPath)\n    }\n    const makeTransition = (dura: number, easingFn: (normalizedTime: number) => number) => {\n      return d3.transition<Mdata>().duration(dura).ease(easingFn) as d3.Transition<any, Mdata, null, undefined>\n    }\n    const bindEvent = (g: SelectionG, isRoot: boolean) => {\n      if (props.drag || props.edit) {\n        const gText = g.select<SVGGElement>(`:scope > g.${style.content} > g.${style.text}`)\n        gText.on('mousedown', onSelect)\n        if (props.drag && !isRoot) { drag(gText) }\n        if (props.edit) { gText.on('click', onEdit) }\n      }\n      if (props.addNodeBtn) {\n        g.select<SVGGElement>(`:scope > g.${style.content}`).on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave)\n      }\n    }\n    /**\n     * @param this gText\n     */\n    function getDragContainer (this: SVGGElement) {\n      return this.parentNode?.parentNode?.parentNode as SVGGElement\n    }\n    // 监听事件\n    function onZoomMove (e: d3.D3ZoomEvent<SVGSVGElement, null>) {\n      if (!g.value) { return }\n      g.value.attr('transform', e.transform.toString())\n    }\n    /**\n     * @param this gText\n     */\n    function onDragMove (this: SVGGElement, e: d3.D3DragEvent<SVGGElement, Mdata, Mdata>, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      showAddNodeBtn.value = false\n      if (!g.value) { return }\n      moveNode(gNode, d, [e.x - d.x, e.y - d.y])\n      // 鼠标相对gEle左上角的位置\n      const mousePos = d3.pointer(e, gEle.value)\n      mousePos[1] += mmdata.data.y\n\n      const temp = g.value.selectAll<SVGGElement, Mdata>('g.node').filter((other) => {\n        if (other !== d && other !== d.parent && !other.id.startsWith(d.id)) {\n          const rect = {\n            x0: other.x - textRectPadding.value,\n            x1: other.x + other.width + textRectPadding.value,\n            y0: other.y - textRectPadding.value,\n            y1: other.y + other.height + textRectPadding.value\n          }\n          return mousePos[0] > rect.x0 && mousePos[1] > rect.y0 && mousePos[0] < rect.x1 && mousePos[1] < rect.y1\n        }\n        return false\n      })\n      const old = Array.from(document.getElementsByClassName(style.outline))\n      const n = temp.node()\n      old.forEach((o) => { if (o !== n) { o.classList.remove(style.outline) } })\n      n?.classList.add(style.outline)\n    }\n    /**\n     * @param this gText\n     */\n    function onDragEnd (this: SVGGElement, e: d3.D3DragEvent<SVGGElement, Mdata, Mdata>, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      showAddNodeBtn.value = true\n      // 判断是否找到了新的父节点\n      const np = document.getElementsByClassName(style.outline)[0]\n      if (np) {\n        np.classList.remove(style.outline)\n        const pid = np.getAttribute('data-id')\n        if (pid) {\n          d.px = 0\n          d.py = 0\n          reparent(pid, d.id)\n        } else {\n          throw new Error('outline data-id null')\n        }\n        return\n      }\n      // 判断是否需要调换节点顺序\n      const p = gNode.parentNode as SVGGElement\n      let downD = d\n      let upD = d\n      const brothers = d3.select<SVGGElement, Mdata>(p).selectAll<SVGGElement, Mdata>(`g.${getGClass(d).join('.')}`).filter((a) => a !== d)\n      brothers.each((b) => {\n        if (b.y > d.y && b.y < (d.y + d.py) && b.y > upD.y) { upD = b } // 找新哥哥节点\n        if (b.y < d.y && b.y > (d.y + d.py) && b.y < downD.y) { downD = b } // 找新弟弟节点\n      })\n      if (downD !== d) {\n        d.px = 0\n        d.py = 0\n        move(d.id, downD.id)\n        return\n      } else if (upD !== d) {\n        d.px = 0\n        d.py = 0\n        move(d.id, upD.id, 1)\n        return\n      }\n      // 复原\n      moveNode(gNode, d, [0, 0], 500)\n    }\n    /**\n     * @param this gText\n     */\n    function onEdit (this: SVGGElement, e: MouseEvent, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      if (editFlag && foreign.value && foreignDivEle.value) {\n        gNode.classList.add(style.edited)\n        editFlag = false\n        foreign.value.attr('x', d.x - 2).attr('y', d.y - mmdata.data.y - 2)\n          .attr('data-id', d.id).attr('data-name', d.name).style('display', '')\n        const div = foreignDivEle.value\n        div.textContent = d.name\n        div.focus()\n        getSelection()?.selectAllChildren(div)\n      }\n    }\n    const onEditBlur = () => {\n      document.getElementsByClassName(style.edited)[0]?.classList.remove(style.edited, style.selected)\n\n      if (foreignEle.value && foreignDivEle.value) {\n        foreignEle.value.style.display = 'none'\n        const id = foreignEle.value.getAttribute('data-id')\n        const oldname = foreignEle.value.getAttribute('data-name')\n        const name = foreignDivEle.value.textContent\n        if (id && name && name !== oldname) {\n          rename(id, name)\n        }\n      }\n    }\n    const onSelect = (e: MouseEvent, d: Mdata) => {\n      e.stopPropagation()\n      selectGNode(d)\n    }\n    /**\n     * @param this gContent\n     */\n    function onMouseEnter (this: SVGGElement) {\n      const temp = this.querySelector<HTMLElement>(`g.${style['add-btn']}`)\n      if (temp) { temp.style.opacity = '1' }\n    }\n    /**\n     * @param this gContent\n     */\n    function onMouseLeave (this: SVGGElement) {\n      const temp = this.querySelector<HTMLElement>(`g.${style['add-btn']}`)\n      if (temp) { temp.style.opacity = '0' }\n    }\n    const onClickAddBtn = (e: MouseEvent, d: Mdata) => { add(d.id, '') }\n    // 插件\n    const switchZoom = (zoomable: boolean) => {\n      if (!svg.value) { return }\n      if (zoomable) {\n        zoom(svg.value)\n        svg.value.on('dblclick.zoom', null)\n      } else {\n        svg.value.on('.zoom', null)\n      }\n    }\n    const switchEdit = (editable: boolean) => {\n      if (!foreignDivEle.value || !g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.${style.text}`)\n      if (editable) {\n        gText.on('click', onEdit)\n      } else {\n        gText.on('click', null)\n      }\n    }\n    const switchDrag = (draggable: boolean) => {\n      if (!g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.node:not(.${style.root}) > g > g.${style.text}`)\n      if (draggable) {\n        drag(gText)\n      } else {\n        gText.on('.drag', null)\n      }\n    }\n    const switchSelect = (selectable: boolean) => {\n      if (!g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.${style.text}`)\n      if (selectable) {\n        gText.on('mousedown', onSelect)\n      } else {\n        gText.on('mousedown', null)\n      }\n    }\n    // 一次操作\n    const rename = (id: string, name: string) => {\n      mmdata.rename(id, name)\n      draw()\n    }\n    const reparent = (pid: string, id: string) => {\n      mmdata.reparent(pid, id)\n      draw()\n    }\n    const move = (id: string, referenceId: string, after = 0) => {\n      mmdata.move(id, referenceId, after)\n      draw()\n    }\n    const add = (id: string, name: string) => {\n      mmdata.add(id, name)\n      draw()\n    }\n    // 辅助按钮的点击事件\n    const centerView = () => {\n      if (!svg.value) { return }\n      const data = mmdata.data\n      zoom.translateTo(svg.value, 0 + data.width / 2, 0 + data.height / 2)\n    }\n    const fitView = () => { // 缩放至合适大小并移动至全部可见\n      // bug: 缩放后的大小与容器不一致\n      if (!svg.value || !gEle.value || !svgEle.value) { return }\n      const gBB = gEle.value.getBBox()\n      const svgBCR = svgEle.value.getBoundingClientRect()\n      const multiple = Math.min(svgBCR.width / gBB.width, svgBCR.height / gBB.height)\n      const svgCenter = { x: svgBCR.width / 2, y: svgBCR.height / 2 }\n      // after scale\n      const gCenter = { x: gBB.width * multiple / 2, y: gBB.height * multiple / 2 }\n      const center = d3.zoomIdentity.translate(\n        -gBB.x * multiple + svgCenter.x - gCenter.x,\n        -gBB.y * multiple + svgCenter.y - gCenter.y\n      ).scale(multiple)\n      zoom.transform(svg.value, center)\n    }\n    const download = () => {\n      const svgdiv = document.querySelector<HTMLDivElement>(`div.${style.svg}`)\n      if (svgdiv) {\n        html2canvas(svgdiv).then((canvas) => {\n          const dataUrl = canvas.toDataURL()\n          const window = open()\n          if (window) {\n            window.document.write(`<img src='${dataUrl}'>`)\n            window.document.title = mmdata.data.name\n            window.document.close()\n          }\n        })\n      }\n    }\n\n    return {\n      svgEle,\n      gEle,\n      style,\n      asstSvgEle,\n      foreignEle,\n      foreignDivEle,\n      centerView,\n      fitView,\n      download\n    }\n  }\n})\n</script>\n","class Tree {\n  w: number\n  h: number\n  y: number\n  c: Tree[]\n  cs: number\n  x: number\n  prelim: number\n  mod: number\n  shift: number\n  change: number\n  tl: Tree | null\n  tr: Tree | null\n  el: Tree | null\n  er: Tree | null\n  msel: number\n  mser: number\n\n  constructor (width: number, height: number, y: number, children: Tree[]) {\n    this.w = width\n    this.h = height\n    this.y = y\n    this.c = children\n    this.cs = children.length\n\n    this.x = 0\n    this.prelim = 0\n    this.mod = 0\n    this.shift = 0\n    this.change = 0\n    this.tl = null // Left thread\n    this.tr = null // Right thread\n    this.el = null // extreme left nodes\n    this.er = null // extreme right nodes\n    // sum of modifiers at the extreme nodes\n    this.msel = 0\n    this.mser = 0\n  }\n}\n\nfunction setExtremes (tree: Tree) {\n  if (tree.cs === 0) {\n    tree.el = tree\n    tree.er = tree\n    tree.msel = tree.mser = 0\n  } else {\n    tree.el = tree.c[0].el\n    tree.msel = tree.c[0].msel\n    tree.er = tree.c[tree.cs - 1].er\n    tree.mser = tree.c[tree.cs - 1].mser\n  }\n}\n\nfunction bottom (tree: Tree) {\n  return tree.y + tree.h\n}\n\n/* A linked list of the indexes of left siblings and their lowest vertical coordinate.\n */\nclass IYL {\n  lowY: number\n  index: number\n  next: IYL | null\n  constructor (lowY: number, index: number, next: IYL | null) {\n    this.lowY = lowY\n    this.index = index\n    this.next = next\n  }\n}\n\nfunction updateIYL (minY: number, i: number, ih: IYL | null) {\n  // Remove siblings that are hidden by the new subtree.\n  while (ih !== null && minY >= ih.lowY) {\n    // Prepend the new subtree\n    ih = ih.next\n  }\n  return new IYL(minY, i, ih)\n}\n\nfunction distributeExtra (tree: Tree, i: number, si: number, distance: number) {\n  // Are there intermediate children?\n  if (si !== i - 1) {\n    const nr = i - si\n    tree.c[si + 1].shift += distance / nr\n    tree.c[i].shift -= distance / nr\n    tree.c[i].change -= distance - distance / nr\n  }\n}\n\nfunction moveSubtree (tree: Tree, i: number, si: number, distance: number) {\n  // Move subtree by changing mod.\n  tree.c[i].mod += distance\n  tree.c[i].msel += distance\n  tree.c[i].mser += distance\n  distributeExtra(tree, i, si, distance)\n}\n\nfunction nextLeftContour (tree: Tree) {\n  return tree.cs === 0 ? tree.tl : tree.c[0]\n}\n\nfunction nextRightContour (tree: Tree) {\n  return tree.cs === 0 ? tree.tr : tree.c[tree.cs - 1]\n}\n\nfunction setLeftThread (tree: Tree, i: number, cl: Tree, modsumcl: number) {\n  const li = tree.c[0].el as Tree\n  li.tl = cl\n  // Change mod so that the sum of modifier after following thread is correct.\n  const diff = (modsumcl - cl.mod) - tree.c[0].msel\n  li.mod += diff\n  // Change preliminary x coordinate so that the node does not move.\n  li.prelim -= diff\n  // Update extreme node and its sum of modifiers.\n  tree.c[0].el = tree.c[i].el\n  tree.c[0].msel = tree.c[i].msel\n}\n\n// Symmetrical to setLeftThread\nfunction setRightThread (tree: Tree, i: number, sr: Tree, modsumsr: number) {\n  const ri = tree.c[i].er as Tree\n  ri.tr = sr\n  const diff = (modsumsr - sr.mod) - tree.c[i].mser\n  ri.mod += diff\n  ri.prelim -= diff\n  tree.c[i].er = tree.c[i - 1].er\n  tree.c[i].mser = tree.c[i - 1].mser\n}\n\nfunction seperate (tree: Tree, i: number, ih: IYL) {\n  // Right contour node of left siblings and its sum of modifiers.\n  let sr: Tree | null = tree.c[i - 1]\n  let mssr = sr.mod\n  // Left contour node of right siblings and its sum of modifiers.\n  let cl: Tree | null = tree.c[i]\n  let mscl = cl.mod\n  while (sr !== null && cl !== null) {\n    if (bottom(sr) > ih.lowY) {\n      ih = ih.next as IYL\n    }\n    // How far to the left of the right side of sr is the left side of cl.\n    const distance = mssr + sr.prelim + sr.w - (mscl + cl.prelim)\n    if (distance > 0) {\n      mscl += distance\n      moveSubtree(tree, i, ih.index, distance)\n    }\n\n    const sy = bottom(sr)\n    const cy = bottom(cl)\n    if (sy <= cy) {\n      sr = nextRightContour(sr)\n      if (sr !== null) {\n        mssr += sr.mod\n      }\n    }\n    if (sy >= cy) {\n      cl = nextLeftContour(cl)\n      if (cl !== null) {\n        mscl += cl.mod\n      }\n    }\n  }\n\n  // Set threads and update extreme nodes.\n  // In the first case, the current subtree must be taller than the left siblings.\n  if (sr === null && cl !== null) {\n    setLeftThread(tree, i, cl, mscl)\n  } else if (sr !== null && cl === null) {\n    setRightThread(tree, i, sr, mssr)\n  }\n}\n\nfunction positionRoot (tree: Tree) {\n  // Position root between children, taking into account their mod.\n  tree.prelim =\n    (tree.c[0].prelim +\n      tree.c[0].mod +\n      tree.c[tree.cs - 1].mod +\n      tree.c[tree.cs - 1].prelim +\n      tree.c[tree.cs - 1].w) /\n      2 -\n    tree.w / 2\n}\n\nfunction firstWalk (tree: Tree) {\n  if (tree.cs === 0) {\n    setExtremes(tree)\n    return\n  }\n\n  firstWalk(tree.c[0])\n  let ih = updateIYL(bottom(tree.c[0].el as Tree), 0, null)\n  for (let i = 1; i < tree.cs; i++) {\n    firstWalk(tree.c[i])\n    const minY = bottom(tree.c[i].er as Tree)\n    seperate(tree, i, ih)\n    ih = updateIYL(minY, i, ih)\n  }\n  positionRoot(tree)\n  setExtremes(tree)\n}\n\nfunction addChildSpacing (tree: Tree) {\n  let d = 0\n  let modsumdelta = 0\n  for (let i = 0; i < tree.cs; i++) {\n    d += tree.c[i].shift\n    modsumdelta += d + tree.c[i].change\n    tree.c[i].mod += modsumdelta\n  }\n}\n\nfunction secondWalk (tree: Tree, modsum: number) {\n  modsum += tree.mod\n  // Set absolute (no-relative) horizontal coordinates.\n  tree.x = tree.prelim + modsum\n  addChildSpacing(tree)\n  for (let i = 0; i < tree.cs; i++) {\n    secondWalk(tree.c[i], modsum)\n  }\n}\n\nfunction layout (tree: Tree): void {\n  firstWalk(tree)\n  secondWalk(tree, 0)\n}\n\nexport { Tree, layout }\n","import { layout, Tree } from './algorithm'\n\nexport type TreeData = {\n  width: number\n  height: number\n  children?: TreeData[]\n  x: number\n  y: number\n}\ninterface Box {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport class BoundingBox {\n  gap: number\n  bottomPadding: number\n  /**\n   * @param {number} gap - the gap between sibling nodes\n   * @param {number} bottomPadding - the height reserved for connection drawing\n   */\n  constructor (gap: number, bottomPadding: number) {\n    this.gap = gap\n    this.bottomPadding = bottomPadding\n  }\n\n  addBoundingBox (width: number, height: number): { width: number, height: number } {\n    return { width: width + this.gap, height: height + this.bottomPadding }\n  }\n\n  /**\n   * Return the coordinate without the bounding box for a node\n   */\n  removeBoundingBox (x: number, y: number): { x: number, y: number } {\n    return { x: x + this.gap / 2, y }\n  }\n}\n\nexport class Layout {\n  bb: BoundingBox\n  constructor (boundingBox: BoundingBox) {\n    this.bb = boundingBox\n  }\n\n  /**\n   * Layout treeData.\n   * Return modified treeData and the bounding box encompassing all the nodes.\n   *\n   * See getSize() for more explanation.\n   */\n  layout<T extends TreeData> (treeData: T): { result: T, boundingBox: Box } {\n    const tree = this.convert(treeData)\n    layout(tree)\n    const { boundingBox, result } = this.assignLayout(tree, treeData)\n\n    return { result, boundingBox }\n  }\n\n  /**\n   * Returns Tree to layout, with bounding boxes added to each node.\n   */\n  convert (treeData: TreeData, y = 0): Tree {\n    const { width, height } = this.bb.addBoundingBox(\n      treeData.width,\n      treeData.height\n    )\n    const children = []\n    if (treeData.children && treeData.children.length) {\n      for (let i = 0; i < treeData.children.length; i++) {\n        children[i] = this.convert(treeData.children[i], y + height)\n      }\n    }\n\n    return new Tree(width, height, y, children)\n  }\n\n  /**\n   * Assign layout tree x, y coordinates back to treeData,\n   * with bounding boxes removed.\n   */\n  assignCoordinates (tree: Tree, treeData: TreeData): void {\n    const { x, y } = this.bb.removeBoundingBox(tree.x, tree.y)\n    treeData.x = x\n    treeData.y = y\n    for (let i = 0; i < tree.c.length; i++) {\n      this.assignCoordinates(tree.c[i], (treeData.children as TreeData[])[i])\n    }\n  }\n\n  /**\n   * Return the bounding box that encompasses all the nodes.\n   * The result has a structure of\n   * { left: number, right: number, top: number, bottom: nubmer}.\n   * This is not the same bounding box concept as the `BoundingBox` class\n   * used to construct `Layout` class.\n   */\n  getSize (treeData: TreeData, box?: Box): Box {\n    const { x, y, width, height } = treeData\n    if (!box) {\n      box = { left: x, right: x + width, top: y, bottom: y + height }\n    }\n    box.left = Math.min(box.left, x)\n    box.right = Math.max(box.right, x + width)\n    box.top = Math.min(box.top, y)\n    box.bottom = Math.max(box.bottom, y + height)\n\n    if (treeData.children) {\n      for (const child of treeData.children) {\n        this.getSize(child, box)\n      }\n    }\n\n    return box\n  }\n\n  /**\n   * This function does assignCoordinates and getSize in one pass.\n   */\n  assignLayout<T extends TreeData> (tree: Tree, treeData: T, box?: Box): { result: T, boundingBox: Box } {\n    const { x, y } = this.bb.removeBoundingBox(tree.x, tree.y)\n    treeData.x = x\n    treeData.y = y\n\n    const { width, height } = treeData\n    if (!box) {\n      box = { left: x, right: x + width, top: y, bottom: y + height }\n    }\n    box.left = Math.min(box.left, x)\n    box.right = Math.max(box.right, x + width)\n    box.top = Math.min(box.top, y)\n    box.bottom = Math.max(box.bottom, y + height)\n\n    for (let i = 0; i < tree.c.length; i++) {\n      this.assignLayout(tree.c[i], (treeData.children as T[])[i], box)\n    }\n\n    return { result: treeData, boundingBox: box }\n  }\n}\n","import * as d3ScaleChromatic from 'd3-scale-chromatic'\nimport * as d3Scale from 'd3-scale'\nimport { Data, Mdata } from '@/interface'\nimport { BoundingBox, Layout } from '@/tools/flextree'\n\ntype GetSize = (text: string) => { width: number, height: number }\ntype Processer = (d: Mdata, id: string) => void\ntype IsMdata = Mdata | null\n\ninterface TreeData {\n  rawData: Data\n  width: number\n  height: number\n  x: number\n  y: number\n  children?: TreeData[]\n}\n\nconst colorScale = d3Scale.scaleOrdinal(d3ScaleChromatic.schemePaired) // 颜色列表\nlet colorNumber = 0\nlet gKey = 0\n\n// rawData width height x y children\nfunction initTreeData (d: Data, getSize: GetSize) {\n  const size = getSize(d.name)\n  const data: TreeData = {\n    rawData: d,\n    width: size.height,\n    height: size.width,\n    x: 0,\n    y: 0\n  }\n\n  const { children } = d\n  if (children) {\n    const dataChildren: TreeData[] = data.children = []\n    children.forEach((child) => {\n      dataChildren.push(initTreeData(child, getSize))\n    })\n  }\n\n  return data\n}\n// id gKey depth dx dy name left color px py\nconst init = (d: TreeData, id = '0', p: IsMdata = null, c?: string) => {\n  const x = d.y\n  const y = d.x\n  let color = ''\n  let left = false\n  let px = x\n  let py = y\n  if (p) {\n    left = p.left\n    px = p.x\n    py = p.y\n    color = c || colorScale(`${colorNumber += 1}`)\n  }\n  const data: Mdata = {\n    x,\n    y,\n    width: d.height,\n    height: d.width,\n    id,\n    gKey: (gKey += 1),\n    depth: Math.floor(id.length / 2),\n    name: d.rawData.name,\n    px: 0,\n    py: 0,\n    rawData: d.rawData,\n    parent: p,\n    color,\n    left,\n    dx: x - px,\n    dy: y - py\n  }\n  if (d.children) {\n    data.children = []\n    d.children.forEach((c, j) => {\n      data.children?.push(init(c, `${id}-${j}`, data, color))\n    })\n  }\n  return data\n}\n\nfunction swapWidthAndHeight<T extends { width: number, height: number }> (d: T) {\n  [d.width, d.height] = [d.height, d.width]\n}\n\nconst swapXAndY = <T extends { x: number, y: number }>(d: T) => {\n  [d.x, d.y] = [d.y, d.x]\n}\n\nconst renewDelta = <T extends { x: number, y: number, parent: T | null, dx: number, dy: number }>(d: T) => {\n  if (d.parent) {\n    d.dx = d.x - d.parent.x\n    d.dy = d.y - d.parent.y\n  } else {\n    d.dx = 0\n    d.dy = 0\n  }\n}\n\nconst renewId = <T extends { id: string }>(d: T, id: string) => {\n  d.id = id\n}\n\nconst renewColor = <T extends { color: string, parent: T | null }>(d: T) => {\n  if (d.parent) {\n    if (d.parent.color) {\n      d.color = d.parent.color\n    } else if (!d.color) {\n      d.color = colorScale(`${colorNumber += 1}`)\n    }\n  }\n}\n\nconst traverse = (d: Mdata, process: Processer[], id = '0') => {\n  process.forEach((p) => { p(d, id) })\n  d.children?.forEach((child, index) => { traverse(child, process, `${id}-${index}`) })\n}\n\nconst getLayout = (xGap: number, yGap: number) => {\n  const bb = new BoundingBox(yGap, xGap)\n  return new Layout(bb)\n}\n\nclass ImData {\n  data: Mdata\n  private getSize: GetSize\n  private layout: Layout\n\n  constructor (d: Data, xGap: number, yGap: number, getSize: GetSize) {\n    const data = initTreeData(d, getSize)\n    this.layout = getLayout(xGap, yGap)\n    this.layout.layout(data)\n    this.data = init(data)\n    this.getSize = getSize\n  }\n\n  setBoundingBox (xGap: number, yGap: number): void {\n    this.layout = getLayout(xGap, yGap)\n    this.renew()\n  }\n\n  find (id: string): IsMdata { // 根据id找到数据\n    const array = id.split('-').map(n => ~~n)\n    let data = this.data\n    for (let i = 1; i < array.length; i++) {\n      if (data && data.children) {\n        data = data.children[array[i]]\n      } else { // No data matching id\n        return null\n      }\n    }\n    return data\n  }\n\n  rename (id: string, name: string): IsMdata { // 修改名称\n    if (id.length > 0) {\n      const d = this.find(id)\n      if (d && d.name !== name) {\n        d.name = name\n        d.rawData.name = name\n        //\n        const size = this.getSize(d.name)\n        d.width = size.width\n        d.height = size.height\n        this.renew()\n      }\n      return d\n    } else {\n      return null\n    }\n  }\n\n  reparent (parentId: string, delId: string): IsMdata { // 节点移动到其他层\n    if (parentId === delId) { return null }\n    const np = this.find(parentId)\n    const del = this.find(delId)\n    const delIndex = delId.split('-').pop()\n    if (delIndex && np && del) {\n      const delParent = del.parent\n      delParent?.children?.splice(~~delIndex, 1)\n      delParent?.rawData.children?.splice(~~delIndex, 1)\n      del.parent = np\n      del.gKey = gKey += 1\n      del.depth = del.parent.depth + 1\n      if (del.depth === 1) { del.color = colorScale(`${colorNumber += 1}`) }\n      np.children ? np.children.push(del) : np.children = [del]\n      np.rawData.children ? np.rawData.children.push(del.rawData) : np.rawData.children = [del.rawData]\n      traverse(this.data, [swapWidthAndHeight])\n      this.layout.layout(this.data)\n      traverse(this.data, [swapWidthAndHeight, swapXAndY, renewDelta, renewId, renewColor])\n    }\n    return del\n  }\n\n  move (id: string, referenceId: string, after = 0): IsMdata { // 同层调换顺序\n    const idArr = id.split('-')\n    const refArr = referenceId.split('-')\n    let index: number | string | undefined = idArr.pop()\n    let refIndex: number | string | undefined = refArr.pop()\n    if (id === referenceId || idArr.length !== refArr.length || !index || !refIndex) { return null }\n    const d = this.find(id)\n    if (d && d.parent) {\n      index = parseInt(index, 10)\n      refIndex = parseInt(refIndex, 10)\n      if (index < refIndex) { refIndex -= 1 } // 删除时可能会改变插入的序号\n      const { children } = d.parent\n      const { children: rawChildren } = d.parent.rawData\n      if (children && rawChildren) {\n        children.splice(index, 1)\n        children.splice(refIndex + after, 0, d)\n        rawChildren.splice(index, 1)\n        rawChildren.splice(refIndex + after, 0, d.rawData)\n        traverse(this.data, [swapWidthAndHeight])\n        this.layout.layout(this.data)\n        traverse(this.data, [swapWidthAndHeight, swapXAndY, renewDelta, renewId])\n        return d\n      }\n    }\n    return null\n  }\n\n  add (id: string, name: string): IsMdata {\n    const p = this.find(id)\n    if (p) {\n      if (!p.children) { p.children = [] }\n      if (!p.rawData.children) { p.rawData.children = [] }\n      const size = this.getSize(name)\n      const rawData = { name }\n      const color = p.color ? p.color : colorScale(`${colorNumber += 1}`)\n      const d = {\n        id: `${p.id}-${p.children.length}`,\n        name,\n        rawData,\n        parent: p,\n        left: p.left,\n        color,\n        gKey: gKey += 1,\n        width: size.width,\n        height: size.height,\n        depth: p.depth + 1,\n        x: 0,\n        y: 0,\n        dx: 0,\n        dy: 0,\n        px: 0,\n        py: 0\n      }\n      p.children.push(d)\n      p.rawData.children.push(rawData)\n      this.renew()\n      return d\n    }\n    return null\n  }\n\n  renew (): void {\n    traverse(this.data, [swapWidthAndHeight])\n    this.layout.layout(this.data)\n    traverse(this.data, [swapWidthAndHeight, swapXAndY, renewDelta])\n  }\n}\n\nexport default ImData\n","import * as d3 from './d3'\nimport ImData from './ImData'\n\nexport { d3, ImData }\n/**\n * 使页面重排\n * @param ele Element\n */\nexport const reflow = (ele: Element): number => ele.clientHeight\n/**\n * 获取一个加号图形的path路径，图形的中心坐标为（0，0）\n * @param stroke 线条的粗细\n * @param side 图形的边长\n */\nexport const getAddPath = (stroke: number, side: number): string => {\n  const temp0 = -side / 2\n  const temp1 = -stroke / 2\n  const temp2 = stroke / 2\n  const temp3 = side / 2\n  return `M${temp3},${temp2}H${temp2}V${temp3}H${temp1}V${temp2}H${temp0}V${temp1}H${temp1}V${temp0}H${temp2}V${temp1}H${temp3}V${temp2}Z`\n}\n/**\n * 将一个字符串按换行符切分，返回字符串数组\n * @param str 字符串\n */\nexport const getMultiline = (str: string): string[] => {\n  const multiline = str.split('\\n')\n  if (multiline.length > 2 && multiline[multiline.length - 1] === '') {\n    multiline.pop()\n  }\n  return multiline\n}\n","\nimport { computed, defineComponent, onMounted, PropType, Ref, ref, watch } from 'vue'\nimport { Data, Mdata } from '@/interface'\nimport style from './Mindmap.module.scss'\nimport { d3, ImData, getAddPath, getMultiline } from '@/tools'\nimport html2canvas from 'html2canvas'\n\ntype TspanData = { name: string, height: number }\ntype SelectionG = d3.Selection<SVGGElement, Mdata, SVGGElement, Mdata | null>\ntype SelectionRect = d3.Selection<SVGRectElement, Mdata, SVGGElement, Mdata | null>\ntype Transition = d3.Transition<d3.BaseType, Mdata, SVGGElement, unknown>\ntype TwoNumber = [number, number]\n\nexport default defineComponent({\n  name: 'Mindmap',\n  props: {\n    modelValue: {\n      type: Array as PropType<Data[]>,\n      required: true\n    },\n    width: Number,\n    height: Number,\n    xGap: {\n      type: Number,\n      default: 50\n    },\n    yGap: {\n      type: Number,\n      default: 18\n    },\n    branch: {\n      type: Number,\n      default: 4\n    },\n    scaleExtent: {\n      default: (): TwoNumber => [0.1, 8]\n    },\n    centerBtn: Boolean,\n    fitBtn: Boolean,\n    downloadBtn: Boolean,\n    undoBtn: Boolean,\n    addNodeBtn: Boolean,\n    edit: Boolean,\n    drag: Boolean,\n    keyboard: Boolean,\n    contextMenu: Boolean,\n    zoom: Boolean\n  },\n  setup (props) {\n    const svgEle: Ref<SVGSVGElement | undefined> = ref()\n    const gEle: Ref<SVGGElement | undefined> = ref()\n    const asstSvgEle: Ref<SVGSVGElement | undefined> = ref()\n    const foreignEle: Ref<SVGForeignObjectElement | undefined> = ref()\n    const foreignDivEle: Ref<HTMLDivElement | undefined> = ref()\n    const svg: Ref<d3.Selection<SVGSVGElement, null, null, undefined> | undefined> = ref()\n    const g: Ref<d3.Selection<SVGGElement, null, null, undefined> | undefined> = ref()\n    const asstSvg: Ref<d3.Selection<SVGSVGElement, unknown, null, undefined> | undefined> = ref()\n    const foreign: Ref<d3.Selection<SVGForeignObjectElement, null, null, undefined> | undefined> = ref()\n    const link = d3.linkHorizontal().source((d) => d.source).target((d) => d.target)\n    const zoom = d3.zoom<SVGSVGElement, null>().on('zoom', onZoomMove).scaleExtent(props.scaleExtent)\n    const drag = d3.drag<SVGGElement, Mdata>().container(getDragContainer).on('drag', onDragMove).on('end', onDragEnd)\n    const observer = new ResizeObserver((arr) => {\n      if (!foreign.value) { return }\n      const temp = arr[0]\n      const target = temp.target\n      const pl = parseInt(getComputedStyle(target).paddingLeft || '0', 10)\n      const b = parseInt(getComputedStyle(target.parentNode as Element).borderTopWidth || '0', 10)\n      const gap = (pl + b) * 2\n      foreign.value.attr('width', temp.contentRect.width + gap).attr('height', temp.contentRect.height + gap)\n    })\n    let mmdata: ImData\n    let editFlag = false\n    const showAddNodeBtn = ref(true)\n    const rootTextRectRadius = 6\n    const rootTextRectPadding = 10\n    const textRectPadding = computed(() => Math.min(props.yGap / 2 - 1, rootTextRectPadding))\n    const addBtnRect = { side: 12, padding: 2 }\n    const addBtnSide = addBtnRect.side + addBtnRect.padding * 2\n\n    onMounted(() => {\n      if (!svgEle.value || !gEle.value || !asstSvgEle.value || !foreignEle.value || !foreignDivEle.value) { return }\n      svg.value = d3.select(svgEle.value)\n      g.value = d3.select(gEle.value)\n      asstSvg.value = d3.select(asstSvgEle.value).attr('width', 0).attr('height', 0)\n      foreign.value = d3.select(foreignEle.value)\n      observer.observe(foreignDivEle.value)\n\n      mmdata = new ImData(\n        JSON.parse(JSON.stringify(props.modelValue[0])),\n        props.xGap,\n        props.yGap,\n        getSize\n      )\n\n      draw()\n      foreign.value.raise()\n      foreignDivEle.value.addEventListener('blur', onEditBlur)\n      foreignDivEle.value.addEventListener('mousedown', (e: MouseEvent) => e.stopPropagation())\n      centerView()\n      fitView()\n      // mousedown与drag/zoom绑定的先后顺序会有影响\n      svg.value.on('mousedown', () => {\n        const oldSele = document.getElementsByClassName(style.selected)[0]\n        oldSele?.classList.remove(style.selected)\n      })\n      switchZoom(props.zoom)\n    })\n    // watch\n    watch(() => [props.branch, props.addNodeBtn], () => draw())\n    watch(() => [props.xGap, props.yGap], (val) => {\n      mmdata.setBoundingBox(val[0], val[1])\n      draw()\n    })\n    watch(() => [props.drag, props.edit], (val) => {\n      switchSelect(val[0] || val[1])\n      switchDrag(val[0])\n      switchEdit(val[1])\n    })\n    watch(() => props.zoom, (val) => switchZoom(val))\n    watch(showAddNodeBtn, (val) => {\n      g.value?.selectAll(`g.${style['add-btn']}`).style('display', val ? '' : 'none')\n    })\n    // 每个属性的计算方法\n    const getGClass = (d?: Mdata) => {\n      const arr = ['node']\n      if (d) {\n        arr.push(`depth-${d.depth}`)\n        if (d.depth === 0) { arr.push(style.root) }\n      }\n      return arr\n    }\n    const getGTransform = (d: Mdata) => { return `translate(${d.dx + d.px},${d.dy + d.py})` }\n    const getDataId = (d: Mdata): string => { return d.id }\n    const getPath = (d: Mdata) => {\n      let dpw = 0\n      let dph = 0\n      if (d.parent) {\n        dpw = d.parent.width\n        dph = d.parent.height\n        if (d.parent.depth === 0) {\n          dpw /= 2\n          dph /= 2\n        }\n      }\n      const temp = props.branch / 2\n      const source: TwoNumber = [-d.dx + dpw - d.px, -d.dy + dph + temp - d.py]\n      const target: TwoNumber = [0, d.height + temp]\n      const trp = Math.max(textRectPadding.value - 3, 0)\n      return `${link({ source, target })}L${d.width + trp},${target[1]}`\n    }\n    const getTspanData = (d: Mdata): TspanData[] => {\n      const multiline = getMultiline(d.name)\n      const height = d.height / multiline.length\n      return multiline.map((name) => ({ name, height }))\n    }\n    const getAddBtnTransform = (d: Mdata, trp: number) => {\n      const gap = 8\n      const y = d.depth === 0 ? d.height / 2 : d.height + props.branch / 2\n      return `translate(${d.width + trp + addBtnSide / 2 + gap},${y})`\n    }\n    // 每个图形的绘制方法\n    const attrG = (g: SelectionG, tran?: Transition) => {\n      const temp1 = g.attr('class', (d) => getGClass(d).join(' ')).attr('data-id', getDataId)\n      const temp2 = tran ? temp1.transition(tran) : temp1\n      temp2.attr('transform', getGTransform)\n    }\n    const attrPath = (p: d3.Selection<SVGPathElement, Mdata, SVGGElement, Mdata | null>, tran?: Transition) => {\n      const temp1 = p.attr('stroke', (d) => d.color).attr('stroke-width', props.branch)\n      const temp2 = tran ? temp1.transition(tran) : temp1\n      temp2.attr('d', getPath)\n    }\n    const attrTspan = (tspan: d3.Selection<SVGTSpanElement, TspanData, SVGTextElement, Mdata>) => {\n      tspan.attr('alignment-baseline', 'text-before-edge')\n        .text((d) => d.name || ' ')\n        .attr('x', 0)\n        .attr('dy', (d, i) => i ? d.height : 0)\n    }\n    const attrTextRect = (rect: SelectionRect, padding = textRectPadding.value, radius = 4) => {\n      rect.attr('x', -padding).attr('y', -padding).attr('rx', radius).attr('ry', radius)\n        .attr('width', (d) => d.width + padding * 2).attr('height', (d) => d.height + padding * 2)\n    }\n    const attrAddBtn = (g: SelectionG, trp = textRectPadding.value) => {\n      g.attr('class', style['add-btn']).attr('transform', (d) => getAddBtnTransform(d, trp))\n    }\n    const attrAddBtnRect = (rect: SelectionRect) => {\n      const side = addBtnRect.side\n      const padding = addBtnRect.padding\n      const radius = 4\n      const temp0 = -padding - side / 2\n      const temp1 = side + padding * 2\n      rect.attr('x', temp0).attr('y', temp0).attr('rx', radius).attr('ry', radius).attr('width', temp1).attr('height', temp1)\n    }\n    const attrTrigger = (rect: SelectionRect, padding = textRectPadding.value) => {\n      rect.attr('class', style.trigger)\n        .attr('x', -padding)\n        .attr('y', -padding)\n        .attr('width', (d) => d.width + padding * 2 + 8 + addBtnSide)\n        .attr('height', (d) => d.height + padding * 2)\n    }\n    // 绘制节点的方法\n    const appendAddBtn = (g: SelectionG) => {\n      const gAddBtn = g.append('g')\n      gAddBtn.on('click', onClickAddBtn)\n      attrAddBtnRect(gAddBtn.append('rect'))\n      gAddBtn.append('path').attr('d', getAddPath(2, addBtnRect.side))\n      return gAddBtn\n    }\n    const appendTspan = (enter: d3.Selection<d3.EnterElement, TspanData, SVGTextElement, Mdata>) => {\n      const tspan = enter.append('tspan')\n      attrTspan(tspan)\n      return tspan\n    }\n    const updateTspan = (update: d3.Selection<SVGTSpanElement, TspanData, SVGTextElement, Mdata>) => {\n      attrTspan(update)\n      return update\n    }\n    const appendNode = (enter: d3.Selection<d3.EnterElement, Mdata, SVGGElement, Mdata | null>) => {\n      const isRoot = !enter.data()[0]?.depth\n      const enterG = enter.append('g')\n      attrG(enterG)\n      // 绘制线\n      attrPath(enterG.append('path'))\n      // 节点容器\n      const gContent = enterG.append('g').attr('class', style.content)\n      const gTrigger = gContent.append('rect')\n      // 绘制文本\n      const gText = gContent.append('g').attr('class', style.text)\n      const gTextRect = gText.append('rect')\n      const tspan = gText.append('text').selectAll('tspan').data(getTspanData).enter().append('tspan')\n      attrTspan(tspan)\n      // 绘制添加按钮\n      let gAddBtn\n      if (props.addNodeBtn) { gAddBtn = appendAddBtn(gContent) }\n\n      if (isRoot) {\n        attrTrigger(gTrigger, rootTextRectPadding)\n        attrTextRect(gTextRect, rootTextRectPadding, rootTextRectRadius)\n        if (gAddBtn) { attrAddBtn(gAddBtn, rootTextRectPadding) }\n      } else {\n        attrTrigger(gTrigger)\n        attrTextRect(gTextRect)\n        if (gAddBtn) { attrAddBtn(gAddBtn) }\n      }\n\n      bindEvent(enterG, isRoot)\n\n      enterG.each((d, i) => {\n        if (!d.children) { return }\n        draw(d.children, enterG.filter((a, b) => i === b))\n      })\n      gContent.raise()\n      return enterG\n    }\n    const updateNode = (update: SelectionG) => {\n      const isRoot = !update.data()[0]?.depth\n      const tran = makeTransition(500, d3.easePolyOut)\n      attrG(update, tran)\n      attrPath(update.select<SVGPathElement>(':scope > path'), tran)\n      const gContent = update.select<SVGGElement>(`:scope > g.${style.content}`)\n      const gTrigger = gContent.select<SVGRectElement>(':scope > rect')\n      const gText = gContent.select<SVGGElement>(`g.${style.text}`)\n      const gTextRect = gText.select<SVGRectElement>('rect')\n      gText.select<SVGTextElement>('text').selectAll<SVGTSpanElement, TspanData>('tspan')\n        .data(getTspanData)\n        .join(appendTspan, updateTspan, exit => exit.remove())\n      let gAddBtn = gContent.select<SVGGElement>(`g.${style['add-btn']}`)\n      if (props.addNodeBtn) {\n        if (!gAddBtn.node()) { gAddBtn = appendAddBtn(gContent) }\n      } else {\n        gAddBtn.remove()\n      }\n\n      if (isRoot) {\n        attrTrigger(gTrigger, rootTextRectPadding)\n        attrTextRect(gTextRect, rootTextRectPadding, rootTextRectRadius)\n        attrAddBtn(gAddBtn, rootTextRectPadding)\n      } else {\n        attrTrigger(gTrigger)\n        attrTextRect(gTextRect)\n        attrAddBtn(gAddBtn)\n      }\n\n      update.each((d, i) => {\n        if (!d.children) { return }\n        draw(d.children, update.filter((a, b) => i === b))\n      })\n      gContent.raise()\n      return update\n    }\n    // 其他\n    const draw = (d = [mmdata.data], sele = g.value as d3.Selection<SVGGElement, any, any, any>) => {\n      const temp = sele.selectAll<SVGGElement, Mdata>(`g.${getGClass(d[0]).join('.')}`)\n      temp.data(d, (d) => d.gKey).join(appendNode, updateNode)\n    }\n    const getSize = (text: string): { width: number, height: number } => {\n      if (!asstSvg.value) { throw new Error('asstSvg undefined') }\n      const multiline = getMultiline(text)\n      const t = asstSvg.value.append('text')\n      t.selectAll('tspan').data(multiline).enter().append('tspan').text((d) => d).attr('x', 0)\n      const tBox = (t.node() as SVGTextElement).getBBox()\n      t.remove()\n      return {\n        width: Math.max(tBox.width, 22),\n        height: Math.max(tBox.height, 22) * multiline.length\n      }\n    }\n    const selectGNode = (d: Mdata) => {\n      const ele = document.querySelector(`g[data-id='${getDataId(d)}']`)\n      const oldSele = document.getElementsByClassName(style.selected)[0]\n      if (ele) {\n        if (oldSele) {\n          if (oldSele !== ele) {\n            oldSele.classList.remove(style.selected)\n            ele.classList.add(style.selected)\n          } else {\n            editFlag = true\n          }\n        } else {\n          ele.classList.add(style.selected)\n        }\n      } else {\n        throw new Error(`g[data-id='${getDataId(d)}'] is null`)\n      }\n    }\n    const moveNode = (node: SVGGElement, d: Mdata, p: TwoNumber, dura = 0) => {\n      const tran = makeTransition(dura, d3.easePolyOut)\n      d.px = p[0]\n      d.py = p[1]\n      d3.select<SVGGElement, Mdata>(node).transition(tran).attr('transform', getGTransform)\n      d3.select<SVGPathElement, Mdata>(`g[data-id='${getDataId(d)}'] > path`).transition(tran).attr('d', getPath)\n    }\n    const makeTransition = (dura: number, easingFn: (normalizedTime: number) => number) => {\n      return d3.transition<Mdata>().duration(dura).ease(easingFn) as d3.Transition<any, Mdata, null, undefined>\n    }\n    const bindEvent = (g: SelectionG, isRoot: boolean) => {\n      if (props.drag || props.edit) {\n        const gText = g.select<SVGGElement>(`:scope > g.${style.content} > g.${style.text}`)\n        gText.on('mousedown', onSelect)\n        if (props.drag && !isRoot) { drag(gText) }\n        if (props.edit) { gText.on('click', onEdit) }\n      }\n      if (props.addNodeBtn) {\n        g.select<SVGGElement>(`:scope > g.${style.content}`).on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave)\n      }\n    }\n    /**\n     * @param this gText\n     */\n    function getDragContainer (this: SVGGElement) {\n      return this.parentNode?.parentNode?.parentNode as SVGGElement\n    }\n    // 监听事件\n    function onZoomMove (e: d3.D3ZoomEvent<SVGSVGElement, null>) {\n      if (!g.value) { return }\n      g.value.attr('transform', e.transform.toString())\n    }\n    /**\n     * @param this gText\n     */\n    function onDragMove (this: SVGGElement, e: d3.D3DragEvent<SVGGElement, Mdata, Mdata>, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      showAddNodeBtn.value = false\n      if (!g.value) { return }\n      moveNode(gNode, d, [e.x - d.x, e.y - d.y])\n      // 鼠标相对gEle左上角的位置\n      const mousePos = d3.pointer(e, gEle.value)\n      mousePos[1] += mmdata.data.y\n\n      const temp = g.value.selectAll<SVGGElement, Mdata>('g.node').filter((other) => {\n        if (other !== d && other !== d.parent && !other.id.startsWith(d.id)) {\n          const rect = {\n            x0: other.x - textRectPadding.value,\n            x1: other.x + other.width + textRectPadding.value,\n            y0: other.y - textRectPadding.value,\n            y1: other.y + other.height + textRectPadding.value\n          }\n          return mousePos[0] > rect.x0 && mousePos[1] > rect.y0 && mousePos[0] < rect.x1 && mousePos[1] < rect.y1\n        }\n        return false\n      })\n      const old = Array.from(document.getElementsByClassName(style.outline))\n      const n = temp.node()\n      old.forEach((o) => { if (o !== n) { o.classList.remove(style.outline) } })\n      n?.classList.add(style.outline)\n    }\n    /**\n     * @param this gText\n     */\n    function onDragEnd (this: SVGGElement, e: d3.D3DragEvent<SVGGElement, Mdata, Mdata>, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      showAddNodeBtn.value = true\n      // 判断是否找到了新的父节点\n      const np = document.getElementsByClassName(style.outline)[0]\n      if (np) {\n        np.classList.remove(style.outline)\n        const pid = np.getAttribute('data-id')\n        if (pid) {\n          d.px = 0\n          d.py = 0\n          reparent(pid, d.id)\n        } else {\n          throw new Error('outline data-id null')\n        }\n        return\n      }\n      // 判断是否需要调换节点顺序\n      const p = gNode.parentNode as SVGGElement\n      let downD = d\n      let upD = d\n      const brothers = d3.select<SVGGElement, Mdata>(p).selectAll<SVGGElement, Mdata>(`g.${getGClass(d).join('.')}`).filter((a) => a !== d)\n      brothers.each((b) => {\n        if (b.y > d.y && b.y < (d.y + d.py) && b.y > upD.y) { upD = b } // 找新哥哥节点\n        if (b.y < d.y && b.y > (d.y + d.py) && b.y < downD.y) { downD = b } // 找新弟弟节点\n      })\n      if (downD !== d) {\n        d.px = 0\n        d.py = 0\n        move(d.id, downD.id)\n        return\n      } else if (upD !== d) {\n        d.px = 0\n        d.py = 0\n        move(d.id, upD.id, 1)\n        return\n      }\n      // 复原\n      moveNode(gNode, d, [0, 0], 500)\n    }\n    /**\n     * @param this gText\n     */\n    function onEdit (this: SVGGElement, e: MouseEvent, d: Mdata) {\n      const gNode = this.parentNode?.parentNode as SVGGElement\n      if (editFlag && foreign.value && foreignDivEle.value) {\n        gNode.classList.add(style.edited)\n        editFlag = false\n        foreign.value.attr('x', d.x - 2).attr('y', d.y - mmdata.data.y - 2)\n          .attr('data-id', d.id).attr('data-name', d.name).style('display', '')\n        const div = foreignDivEle.value\n        div.textContent = d.name\n        div.focus()\n        getSelection()?.selectAllChildren(div)\n      }\n    }\n    const onEditBlur = () => {\n      document.getElementsByClassName(style.edited)[0]?.classList.remove(style.edited, style.selected)\n\n      if (foreignEle.value && foreignDivEle.value) {\n        foreignEle.value.style.display = 'none'\n        const id = foreignEle.value.getAttribute('data-id')\n        const oldname = foreignEle.value.getAttribute('data-name')\n        const name = foreignDivEle.value.textContent\n        if (id && name && name !== oldname) {\n          rename(id, name)\n        }\n      }\n    }\n    const onSelect = (e: MouseEvent, d: Mdata) => {\n      e.stopPropagation()\n      selectGNode(d)\n    }\n    /**\n     * @param this gContent\n     */\n    function onMouseEnter (this: SVGGElement) {\n      const temp = this.querySelector<HTMLElement>(`g.${style['add-btn']}`)\n      if (temp) { temp.style.opacity = '1' }\n    }\n    /**\n     * @param this gContent\n     */\n    function onMouseLeave (this: SVGGElement) {\n      const temp = this.querySelector<HTMLElement>(`g.${style['add-btn']}`)\n      if (temp) { temp.style.opacity = '0' }\n    }\n    const onClickAddBtn = (e: MouseEvent, d: Mdata) => { add(d.id, '') }\n    // 插件\n    const switchZoom = (zoomable: boolean) => {\n      if (!svg.value) { return }\n      if (zoomable) {\n        zoom(svg.value)\n        svg.value.on('dblclick.zoom', null)\n      } else {\n        svg.value.on('.zoom', null)\n      }\n    }\n    const switchEdit = (editable: boolean) => {\n      if (!foreignDivEle.value || !g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.${style.text}`)\n      if (editable) {\n        gText.on('click', onEdit)\n      } else {\n        gText.on('click', null)\n      }\n    }\n    const switchDrag = (draggable: boolean) => {\n      if (!g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.node:not(.${style.root}) > g > g.${style.text}`)\n      if (draggable) {\n        drag(gText)\n      } else {\n        gText.on('.drag', null)\n      }\n    }\n    const switchSelect = (selectable: boolean) => {\n      if (!g.value) { return }\n      const gText = g.value.selectAll<SVGGElement, Mdata>(`g.${style.text}`)\n      if (selectable) {\n        gText.on('mousedown', onSelect)\n      } else {\n        gText.on('mousedown', null)\n      }\n    }\n    // 一次操作\n    const rename = (id: string, name: string) => {\n      mmdata.rename(id, name)\n      draw()\n    }\n    const reparent = (pid: string, id: string) => {\n      mmdata.reparent(pid, id)\n      draw()\n    }\n    const move = (id: string, referenceId: string, after = 0) => {\n      mmdata.move(id, referenceId, after)\n      draw()\n    }\n    const add = (id: string, name: string) => {\n      mmdata.add(id, name)\n      draw()\n    }\n    // 辅助按钮的点击事件\n    const centerView = () => {\n      if (!svg.value) { return }\n      const data = mmdata.data\n      zoom.translateTo(svg.value, 0 + data.width / 2, 0 + data.height / 2)\n    }\n    const fitView = () => { // 缩放至合适大小并移动至全部可见\n      // bug: 缩放后的大小与容器不一致\n      if (!svg.value || !gEle.value || !svgEle.value) { return }\n      const gBB = gEle.value.getBBox()\n      const svgBCR = svgEle.value.getBoundingClientRect()\n      const multiple = Math.min(svgBCR.width / gBB.width, svgBCR.height / gBB.height)\n      const svgCenter = { x: svgBCR.width / 2, y: svgBCR.height / 2 }\n      // after scale\n      const gCenter = { x: gBB.width * multiple / 2, y: gBB.height * multiple / 2 }\n      const center = d3.zoomIdentity.translate(\n        -gBB.x * multiple + svgCenter.x - gCenter.x,\n        -gBB.y * multiple + svgCenter.y - gCenter.y\n      ).scale(multiple)\n      zoom.transform(svg.value, center)\n    }\n    const download = () => {\n      const svgdiv = document.querySelector<HTMLDivElement>(`div.${style.svg}`)\n      if (svgdiv) {\n        html2canvas(svgdiv).then((canvas) => {\n          const dataUrl = canvas.toDataURL()\n          const window = open()\n          if (window) {\n            window.document.write(`<img src='${dataUrl}'>`)\n            window.document.title = mmdata.data.name\n            window.document.close()\n          }\n        })\n      }\n    }\n\n    return {\n      svgEle,\n      gEle,\n      style,\n      asstSvgEle,\n      foreignEle,\n      foreignDivEle,\n      centerView,\n      fitView,\n      download\n    }\n  }\n})\n","import { render } from \"./Mindmap.vue?vue&type=template&id=322fb737&bindings={}\"\nimport script from \"./Mindmap.vue?vue&type=script&lang=ts\"\nexport * from \"./Mindmap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import Mindmap from './Mindmap.vue'\nexport default Mindmap\n","\nimport learn from '../public/learn.json'\nimport { defineComponent, reactive } from 'vue'\nimport Mindmap from './components/Mindmap'\ntype checkbox = { [key: string]: { value: boolean, disabled?: boolean } }\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Mindmap\n  },\n  setup () {\n    const checkboxList = reactive<checkbox>({\n      'center-btn': { value: true },\n      'fit-btn': { value: true },\n      'undo-btn': { value: false, disabled: true },\n      'download-btn': { value: true },\n      'add-node-btn': { value: true },\n      keyboard: { value: false, disabled: true },\n      zoom: { value: true },\n      drag: { value: true },\n      edit: { value: true },\n      contextMenu: { value: false },\n      'sharp-corner': { value: false, disabled: true },\n      vertical: { value: false, disabled: true }\n    })\n    const rangeList = reactive({\n      branch: { value: 4, min: 0, max: 10 },\n      'x-gap': { value: 50, min: 0, max: 100 },\n      'y-gap': { value: 18, min: 0, max: 100 }\n    })\n    return {\n      learn,\n      checkboxList,\n      rangeList\n    }\n  }\n})\n","import { render } from \"./App.vue?vue&type=template&id=5364efdc&bindings={}\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Mindmap-module_container_26Zd2\",\"svg\":\"Mindmap-module_svg_2XgFd\",\"trigger\":\"Mindmap-module_trigger_1RWwm\",\"add-btn\":\"Mindmap-module_add-btn_3mjSS\",\"text\":\"Mindmap-module_text_3iUs6\",\"selected\":\"Mindmap-module_selected_PeP5y\",\"content\":\"Mindmap-module_content_2tDEw\",\"root\":\"Mindmap-module_root_nkPNF\",\"edited\":\"Mindmap-module_edited_23uKl\",\"outline\":\"Mindmap-module_outline_2Q5lo\",\"button-list\":\"Mindmap-module_button-list_eb1cI\",\"right-bottom\":\"Mindmap-module_right-bottom_VZ_4V\",\"top-right\":\"Mindmap-module_top-right_21t-w\",\"disabled\":\"Mindmap-module_disabled_1GAb3\",\"gps\":\"Mindmap-module_gps_q0wQJ\",\"fit\":\"Mindmap-module_fit_1uK7a\",\"download\":\"Mindmap-module_download_2edNx\",\"undo\":\"Mindmap-module_undo_257t-\",\"redo\":\"Mindmap-module_redo_2SvVM\",\"close\":\"Mindmap-module_close_2Wsf_\"};"],"sourceRoot":""}